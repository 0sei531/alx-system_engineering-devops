#!/usr/bin/env bash
# This script displays information about subdomains.

# Function to retrieve A records for a subdomain
get_a_records() {
    local domain="$1"
    local sub="$2"
    local response
    if [[ -n "$sub" ]]; then
        response=$(dig +short "$sub.$domain" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$')
        if [[ -z "$response" ]]; then
            echo "Subdomain '$sub' does not exist for domain '$domain'"
        else
            echo "The subdomain '$sub' is an A record and points to '$response'"
        fi
    else
        local subdomains=("www" "lb-01" "web-01" "web-02")
        for sub_d in "${subdomains[@]}"; do
            response=$(dig +short "$sub_d.$domain" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$')
            if [[ -z "$response" ]]; then
                echo "Subdomain '$sub_d' does not exist for domain '$domain'"
            else
                echo "The subdomain '$sub_d' is an A record and points to '$response'"
            fi
        done
    fi
}

# Main function
main() {
    if [[ $# -lt 1 || $# -gt 2 ]]; then
        echo "Usage: $0 <domain> [subdomain]"
        exit 1
    fi
    local domain="$1"
    local sub="$2"
    if [[ $# -eq 1 ]]; then
        get_a_records "$domain" "www"
        get_a_records "$domain" "lb-01"
        get_a_records "$domain" "web-01"
        get_a_records "$domain" "web-02"
    elif [[ $# -eq 2 ]]; then
        get_a_records "$domain" "$sub"
    fi
}

# Execute main function
main "$@"

